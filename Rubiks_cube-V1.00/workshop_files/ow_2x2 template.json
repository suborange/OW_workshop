variables
{
	global:
		0: Right_1
		1: Right_2
		2: Right_3
		3: Right_4
		4: Left_1
		5: Left_2
		6: Left_3
		7: Left_4
		8: Up_1
		9: Up_2
		10: Up_3
		11: Up_4
		12: Down_1
		13: Down_2
		14: Down_3
		15: Down_4
		16: Front_1
		17: Front_2
		18: Front_3
		19: Front_4
		20: Back_1
		21: Back_2
		22: Back_3
		23: Back_4
		26: Cube_coords_orb
		28: gravity_counter
		29: temp_position
		36: Position_1
		37: Position_2
		38: Position_3
		39: Position_4
}

subroutines
{
	0: Front
}

rule("START try 3x3x3 full - create the colors, and cube like shape")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		"initialize starting positions"
		Global.Front_1 = Vector(0, 10, 4);
		Global.Front_2 = Vector(0, 10, 0);
		Global.Front_3 = Vector(0, 6, 4);
		"Done"
		Global.Front_4 = Vector(0, 6, 0);
		"1st sequence - add to the array for the order, with correct corrdinates"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_1);
		"initialize starting positions"
		disabled Global.temp_position = Global.Front_1;
		"temp seq"
		disabled Global.temp_position += Vector(0, -0.500, 0);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_2);
		"temp 2"
		disabled Global.temp_position = Global.Front_1;
		disabled Global.temp_position += Vector(0, 0, -0.500);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_3);
		"temp 3"
		disabled Global.temp_position = Global.Front_1;
		disabled Global.temp_position += Vector(0, -0.500, -0.500);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_4);
		"temp 4"
		disabled Global.Front_4 = Vector(0, 6, 0);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_4);
		"1. create the orbs now in starting position ( white )"
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[1], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[2], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[3], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[4], 0.300, Visible To Position and Radius);
		"start 2nd sequence"
		Global.Left_3 = Vector(-6, 10, 6);
		Global.Left_1 = Vector(-2, 10, 6);
		Global.Left_4 = Vector(-6, 6, 6);
		"done"
		Global.Left_2 = Vector(-2, 6, 6);
		"2nd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_4);
		"2. create left orbs ( orange )"
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[5], 5, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[6], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[7], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[8], 1, Visible To Position and Radius);
		Global.Down_2 = Vector(-2, 4, 0);
		"start 3rd sequence"
		Global.Down_1 = Vector(-2, 4, 4);
		Global.Down_4 = Vector(-6, 4, 0);
		"done"
		Global.Down_3 = Vector(-6, 4, 4);
		"3rd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_4);
		"3. create down orbs ( green )"
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[9], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[10], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[11], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[12], 1, Visible To Position and Radius);
		"start 4th sequence"
		Global.Right_2 = Vector(-2, 10, -2);
		Global.Right_4 = Vector(-6, 10, -2);
		Global.Right_1 = Vector(-2, 6, -2);
		"Done"
		Global.Right_3 = Vector(-6, 6, -2);
		"4th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_4);
		"4. create right orbs ( red )"
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[13], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[14], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[15], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[16], 1, Visible To Position and Radius);
		"start 5th sequence"
		Global.Up_1 = Vector(-2, 12, 0);
		Global.Up_2 = Vector(-2, 12, 4);
		Global.Up_3 = Vector(-6, 12, 0);
		"Done"
		Global.Up_4 = Vector(-6, 12, 4);
		"5th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_4);
		"5. create Up orbs ( blue )"
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[17], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[18], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[19], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[20], 1, Visible To Position and Radius);
		"start 6th sequence"
		Global.Back_4 = Vector(-8, 10, 0);
		Global.Back_3 = Vector(-8, 10, 4);
		Global.Back_2 = Vector(-8, 6, 0);
		"done"
		Global.Back_1 = Vector(-8, 6, 4);
		"6th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_4);
		"6. create back orbs ( black )"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[21], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[22], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[23], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[24], 1, Visible To Position and Radius);
		"DUMMIES - FRONT BOT"
		Create Dummy Bot(Hero(Doomfist), Team 2, 0, Vector(3.521, 0, -0.607), Vector(0, 0, 0));
		"RIGHT BOT"
		Create Dummy Bot(Hero(Roadhog), Team 2, 1, Vector(-1.900, 8.139, -5.417), Vector(0, 0, 0));
		"UP BOT"
		Create Dummy Bot(Hero(Junker Queen), Team 2, 2, Vector(3, 11.500, 1), Vector(0, 0, 0));
		"BACK BOT"
		Create Dummy Bot(Hero(Bastion), Team 2, 3, Vector(-8, 1, 0), Vector(0, 0, 0));
		"LEFT BOT"
		Create Dummy Bot(Hero(Lifeweaver), Team 2, 4, Vector(-2.500, 0.200, 6), Vector(0, 0, 0));
		"DOWN BOT"
		Create Dummy Bot(Hero(D.Va), Team 2, 5, Vector(-3, 0.200, 1), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[0], Custom String("FRONT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[1], Custom String("RIGHT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[2], Custom String("UP"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[3], Custom String("BACK"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[4], Custom String("LEFT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[5], Custom String("DOWN"));
		"DUMMIES - FRONT INVERSE"
		Create Dummy Bot(Hero(Ana), Team 2, 6, Vector(15.135, 2.500, -3.790), Vector(0, 0, 0));
		"RIGHT INVERSE BOT"
		Create Dummy Bot(Hero(Reinhardt), Team 2, 7, Vector(15.202, 2.500, 0.005), Vector(0, 0, 0));
		"UP INVERSE"
		Create Dummy Bot(Hero(Junkrat), Team 2, 8, Vector(14.877, 2.477, 3.986), Vector(0, 0, 0));
		"BACK INVERSE"
		Create Dummy Bot(Hero(Baptiste), Team 2, 9, Vector(14.958, 2.483, 8.100), Vector(0, 0, 0));
		"LEFT INVERSE"
		Create Dummy Bot(Hero(LÃºcio), Team 2, 10, Vector(14.950, 2.477, 11.418), Vector(0, 0, 0));
		"DOWN INVERSE"
		Create Dummy Bot(Hero(Widowmaker), Team 2, 11, Vector(14.950, 2.480, 15.423), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[6], Custom String("FRONT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[7], Custom String("RIGHT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[8], Custom String("UP INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[9], Custom String("BACK INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[10], Custom String("LEFT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[11], Custom String("DOWN INVERSE"));
		"for each bot, make gravity 0"
		For Global Variable(gravity_counter, 0, Count Of(All Players(Team 2)), 1);
			Set Gravity(All Players(Team 2)[Global.gravity_counter], 0);
		End;
	}
}

rule("Front turn - subroutine")
{
	event
	{
		Subroutine;
		Front;
	}

	actions
	{
		"front face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_4);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 0, -4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -4, 0);
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, 0, 4);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 4, 0);
		"setup right face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_1);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_2);
		"up face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, -6, -2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -2, -6);
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 2, -6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 6, -2);
		"down face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 6, 2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 2, 6);
		"right turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, -2, 6);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, -6, 2);
		Create HUD Text(All Players(All Teams), Custom String("FRONT DONE"), Null, Null, Left, 0, Color(Gray), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}




SETTINGS


settings
{
	main
	{
		Description: "simulate a rubiks cube"
		Mode Name: "rubiks cube simulation"
	}

	lobby
	{
		Map Rotation: Paused
		Max Spectators: 12
		Max Team 1 Players: 1
		Max Team 2 Players: 0
		Return To Lobby: Never
		Swap Teams After Match: No
	}

	modes
	{
		disabled Assault
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Bounty Hunter
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Capture the Flag
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Control
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Deathmatch
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Escort
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Hybrid
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Mischief & Magic
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Practice Range
		{
			Tank Role Passive Health Bonus: Disabled
		}

		disabled Push
		{
			Tank Role Passive Health Bonus: Disabled
		}

		Skirmish
		{
			Tank Role Passive Health Bonus: Disabled

			enabled maps
			{
				Workshop Expanse Night 972777519512064577
			}
		}

		disabled Team Deathmatch
		{
			Tank Role Passive Health Bonus: Disabled
		}

		General
		{
			Game Mode Start: Immediately
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Respawn Time Scalar: 12%
			Spawn Health Packs: Disabled
		}
	}

	heroes
	{
		Team 1
		{
			Damage Dealt: 500%
			Damage Received: 10%
			Health: 500%
			Infinite Ultimate Duration: On
			Spawn With Ultimate Ready: On
			Ultimate Duration: 500%
		}

		Team 2
		{
			Damage Dealt: 10%
			Damage Received: 500%
			Health: 10%
		}

		General
		{
			Healing Dealt: 10%
			Jump Vertical Speed: 208%
			Movement Gravity: 25%

			Ana
			{
				Ammunition Clip Size Scalar: 174%
				Biotic Grenade Cooldown Time: 0%
				Damage Received: 500%
				Health: 10%
				Jump Vertical Speed: 223%
				Movement Gravity: 25%
				Movement Speed: 131%
				No Ammunition Requirement: On
				Sleep Dart Cooldown Time: 0%
			}

			Ashe
			{
				Dynamite: Off
				No Ammunition Requirement: On
				Ultimate Ability B.O.B.: Off
			}

			Baptiste
			{
				No Ammunition Requirement: On
				Ultimate Ability Amplification Matrix: Off
			}

			Bastion
			{
				A-36 Tactical Grenade: Off
				Damage Received: 500%
				Health: 10%
				No Ammunition Requirement: On
				Reconfigure: Off
			}

			Brigitte
			{
				Whip Shot: Off
			}

			Cassidy
			{
				Magnetic Grenade: Off
				No Ammunition Requirement: On
				Secondary Fire: Off
			}

			D.Va
			{
				Damage Received: 500%
				Health: 10%
				Spawn Without Mech: On
			}

			Doomfist
			{
				No Ammunition Requirement: On
			}

			Echo
			{
				Flight Cooldown Time: 0%
				Focusing Beam: Off
				Jump Vertical Speed: 205%
				Movement Gravity: 25%
				No Ammunition Requirement: On
				Sticky Bombs: Off
				Ultimate Ability Duplicate: Off
			}

			Genji
			{
				No Ammunition Requirement: On
			}

			Junker Queen
			{
				Carnage: Off
				Damage Dealt: 500%
				Damage Received: 500%
				Health: 10%
				Jagged Blade: Off
				No Ammunition Requirement: On
				Quick Melee: Off
				Ultimate Ability Rampage: Off
			}

			Junkrat
			{
				Concussion Mine: Off
				No Ammunition Requirement: On
				Steel Trap: Off
				Ultimate Ability RIP-Tire: Off
			}

			Kiriko
			{
				No Ammunition Requirement: On
				Ultimate Ability Kitsune Rush: Off
			}

			Lifeweaver
			{
				Life Grip: Off
				No Ammunition Requirement: On
				Petal Platform: Off
			}

			LÃºcio
			{
				No Ammunition Requirement: On
				Soundwave: Off
			}

			Mei
			{
				Ice Wall: Off
				No Ammunition Requirement: On
			}

			Mercy
			{
				Ammunition Clip Size Scalar: 500%
				Jump Vertical Speed: 172%
				Movement Gravity: 25%
				No Ammunition Requirement: On
				Resurrect: Off
				Spawn With Ultimate Ready: On
				Ultimate Generation - Combat Valkyrie: 500%
				Ultimate Generation - Passive Valkyrie: 500%
				Ultimate Generation Valkyrie: 500%
				Weapons Enabled: Caduceus Blaster Only
			}

			Moira
			{
				Biotic Energy Maximum: 304%
				Biotic Energy Recharge Rate: 326%
			}

			Orisa
			{
				Energy Javelin: Off
				Javelin Spin: Off
				No Ammunition Requirement: On
				Ultimate Ability Terra Surge: Off
			}

			Pharah
			{
				Concussive Blast: Off
				No Ammunition Requirement: On
				Projectile Speed: 287%
				Rocket Launcher Knockback Scalar: 35%
			}

			Ramattra
			{
				No Ammunition Requirement: On
			}

			Reaper
			{
				No Ammunition Requirement: On
				Ultimate Ability Death Blossom: Off
			}

			Reinhardt
			{
				Charge: Off
			}

			Roadhog
			{
				Chain Hook: Off
				No Ammunition Requirement: On
				Ultimate Ability Whole Hog: Off
			}

			Sigma
			{
				Accretion: Off
				Primary Fire: Off
				Projectile Gravity: 0%
				Ultimate Ability Gravitic Flux: Off
			}

			Sojourn
			{
				No Ammunition Requirement: On
			}

			Soldier: 76
			{
				Helix Rockets: Off
				No Ammunition Requirement: On
			}

			Sombra
			{
				No Ammunition Requirement: On
			}

			Symmetra
			{
				No Ammunition Requirement: On
			}

			TorbjÃ¶rn
			{
				No Ammunition Requirement: On
			}

			Tracer
			{
				No Ammunition Requirement: On
			}

			Widowmaker
			{
				No Ammunition Requirement: On
			}

			Winston
			{
				Jump Pack: Off
				No Ammunition Requirement: On
				Ultimate Ability Primal Rage: Off
			}

			Wrecking Ball
			{
				Grappling Claw: Off
				No Ammunition Requirement: On
				Piledriver: Off
				Roll: Off
			}

			Zarya
			{
				No Ammunition Requirement: On
				Particle Cannon Secondary Knockback Scalar: 0%
			}

			Zenyatta
			{
				No Ammunition Requirement: On
				Quick Melee: Off
				Secondary Fire: Off
			}

			enabled heroes
			{
				Mercy
			}
		}
	}

	extensions
	{
		Play More Effects
		Spawn More Dummy Bots
	}
}

variables
{
	global:
		0: Right_1
		1: Right_2
		2: Right_3
		3: Right_4
		4: Left_1
		5: Left_2
		6: Left_3
		7: Left_4
		8: Up_1
		9: Up_2
		10: Up_3
		11: Up_4
		12: Down_1
		13: Down_2
		14: Down_3
		15: Down_4
		16: Front_1
		17: Front_2
		18: Front_3
		19: Front_4
		20: Back_1
		21: Back_2
		22: Back_3
		23: Back_4
		26: Cube_coords_orb
		28: gravity_counter
		29: temp_position
		30: bg_beam_count
		31: bg_beam_start
		32: bg_beam_end
		36: Position_1
		37: Position_2
		38: Position_3
		39: Position_4
}

subroutines
{
	0: Front
	1: Right
	2: Up
	3: Back
	4: Left
	5: Down
}

rule("X,Y,Z")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		"should hopefully prevent weirdness outside of the game? idunno"
		Is Game In Progress == True;
	}

	actions
	{
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(White), Vector(15, 5, 8), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Vector(19, 5, 8), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Red), Vector(17, 5, 8), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Green), Vector(15, 7, 8), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Green), Vector(15, 9, 8), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Vector(15, 5, 10), 1, Visible To Position and Radius);
		"add an orb of some color"
		Create Effect(All Players(All Teams), Sphere, Color(Blue), Vector(15, 5, 12), 1, Visible To Position and Radius);
	}
}

rule("teleport players to starting location")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Teleport(All Players(Team 1), Vector(15.500, 17, 1));
	}
}

disabled rule("START - create the colors cube, spawn dummy, and create array")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		Modify Global Variable(Left_1, Append To Array, Vector(30, 0, 20));
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Left_1[1], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, 2, 20), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, 2, 20));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, -2, 20), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, -2, 20));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, 0, 22), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, 0, 22));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, 2, 22), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, 2, 22));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, -2, 22), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, -2, 22));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, 0, 24), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, 0, 24));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, 2, 24), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, 2, 24));
		Create Effect(All Players(All Teams), Orb, Color(White), Vector(30, -2, 24), 1, Visible To Position and Radius);
		Modify Global Variable(Left_1, Append To Array, Vector(30, -2, 24));
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(31, 0, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(33, 0, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(35, 0, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(31, 2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(33, 2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(35, 2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(31, -2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(33, -2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Vector(35, -2, 19), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(31, 3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(33, 3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(35, 3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(31, 3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(33, 3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(35, 3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(31, 3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(33, 3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Vector(35, 3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(31, 0, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(33, 0, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(35, 0, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(31, 2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(33, 2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(35, 2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(31, -2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(33, -2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Vector(35, -2, 25), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(31, -3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(33, -3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(35, -3, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(31, -3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(33, -3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(35, -3, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(31, -3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(33, -3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Vector(35, -3, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 0, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 2, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, -2, 20), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 0, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 2, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, -2, 22), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 0, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, 2, 24), 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Vector(36, -2, 24), 1, Visible To Position and Radius);
		Global.Left_3 = 4;
		Create Dummy Bot(Hero(Ana), Team 2, 0, Vector(15, 0, 0), Vector(7.932, 1.820, 17.145));
		Create Dummy Bot(Hero(Bastion), Team 2, 1, Vector(12.151, 1.425, -4.325), Vector(7.932, 1.820, 17.145));
	}
}

disabled rule("create a solid cube")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(30, -2, 20), Vector(30, 2, 20), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(35, -2, 20), Vector(35, 2, 20), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(30, 2, 20), Vector(30, 2, 24), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(30, -2, 20), Vector(30, -2, 24), Color(White),
			Visible To Position and Radius);
	}
}

disabled rule("START 2 - create the colors cube, spawn dummy, and create array")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		"initialize starting positions"
		Global.Front_1 = Vector(0, 10, 4);
		Global.Front_2 = Vector(0, 10, 0);
		Global.Front_3 = Vector(0, 6, 4);
		"Done"
		Global.Front_4 = Vector(0, 6, 0);
		"1st sequence - add to the array for the order, with correct corrdinates"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_4);
		"1. create the orbs now in starting position ( white )"
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[1], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[2], 1, Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Good Beam, Global.Front_1[1], Global.Front_1[2], Color(White), Visible To Position and Radius);
        

		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[3], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[4], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		"start 2nd sequence"
		Global.Left_3 = Vector(-6, 10, 6);
		Global.Left_1 = Vector(-2, 10, 6);
		Global.Left_4 = Vector(-6, 6, 6);
		"done"
		Global.Left_2 = Vector(-2, 6, 6);
		"2nd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_4);
		"2. create left orbs ( orange )"
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[5], 5, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[6], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[7], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[8], 1, Visible To Position and Radius);
		Global.Down_2 = Vector(-2, 4, 0);
		"start 3rd sequence"
		Global.Down_1 = Vector(-2, 4, 4);
		Global.Down_4 = Vector(-6, 4, 0);
		"done"
		Global.Down_3 = Vector(-6, 4, 4);
		"3rd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_4);
		"3. create down orbs ( green )"
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[9], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[10], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[11], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[12], 1, Visible To Position and Radius);
		"start 4th sequence"
		Global.Right_2 = Vector(-2, 10, -2);
		Global.Right_4 = Vector(-6, 10, -2);
		Global.Right_1 = Vector(-2, 6, -2);
		"Done"
		Global.Right_3 = Vector(-6, 6, -2);
		"4th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_4);
		"4. create right orbs ( red )"
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[13], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[14], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[15], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[16], 1, Visible To Position and Radius);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Last Created Entity);
		"start 5th sequence"
		Global.Up_1 = Vector(-2, 12, 0);
		Global.Up_2 = Vector(-2, 12, 4);
		Global.Up_3 = Vector(-6, 12, 0);
		"Done"
		Global.Up_4 = Vector(-6, 12, 4);
		"5th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_4);
		"5. create Up orbs ( blue )"
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[17], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[18], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[19], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[20], 1, Visible To Position and Radius);
		"start 6th sequence"
		Global.Back_4 = Vector(-8, 10, 0);
		Global.Back_3 = Vector(-8, 10, 4);
		Global.Back_2 = Vector(-8, 6, 0);
		"done"
		Global.Back_1 = Vector(-8, 6, 4);
		"6th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_4);
		"6. create back orbs ( black )"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[21], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[22], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[23], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[24], 1, Visible To Position and Radius);
		"DUMMIES - FRONT BOT"
		Create Dummy Bot(Hero(Doomfist), Team 2, 0, Vector(3.521, 0, -0.607), Vector(0, 0, 0));
		"RIGHT BOT"
		Create Dummy Bot(Hero(Roadhog), Team 2, 1, Vector(-3.798, 0, -3.070), Vector(0, 0, 0));
		"UP BOT"
		Create Dummy Bot(Hero(Junker Queen), Team 2, 2, Vector(3, 11.500, 1), Vector(0, 0, 0));
		"BACK BOT"
		Create Dummy Bot(Hero(Bastion), Team 2, 3, Vector(-8, 1, 0), Vector(0, 0, 0));
		"LEFT BOT"
		Create Dummy Bot(Hero(Lifeweaver), Team 2, 4, Vector(-2.500, 0.200, 6), Vector(0, 0, 0));
		"DOWN BOT"
		Create Dummy Bot(Hero(D.Va), Team 2, 5, Vector(-3, 0.200, 1), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[0], Custom String("FRONT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[1], Custom String("RIGHT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[2], Custom String("UP"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[3], Custom String("BACK"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[4], Custom String("LEFT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[5], Custom String("DOWN"));
		"spheres"
		disabled Create Effect(All Players(All Teams), Sphere, Color(White), All Players(Team 2)[0], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Red), All Players(Team 2)[1], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Blue), All Players(Team 2)[2], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Black), All Players(Team 2)[3], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Orange), All Players(Team 2)[4], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Green), All Players(Team 2)[5], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Black), All Players(Team 2)[3], 0.700, Visible To Position and Radius);
		disabled Create Effect(All Players(All Teams), Sphere, Color(Black), All Players(Team 2)[3], 0.700, Visible To Position and Radius);
		"DUMMIES - FRONT INVERSE"
		Create Dummy Bot(Hero(Ana), Team 2, 6, Vector(15.135, 2.500, -3.790), Vector(0, 0, 0));
		"RIGHT INVERSE BOT"
		Create Dummy Bot(Hero(Reinhardt), Team 2, 7, Vector(15.202, 2.500, 0.005), Vector(0, 0, 0));
		"UP INVERSE"
		Create Dummy Bot(Hero(Junkrat), Team 2, 8, Vector(14.877, 2.477, 3.986), Vector(0, 0, 0));
		"BACK INVERSE"
		Create Dummy Bot(Hero(Baptiste), Team 2, 9, Vector(14.958, 2.483, 8.100), Vector(0, 0, 0));
		"LEFT INVERSE"
		Create Dummy Bot(Hero(LÃºcio), Team 2, 10, Vector(14.950, 2.477, 11.418), Vector(0, 0, 0));
		"DOWN INVERSE"
		Create Dummy Bot(Hero(Widowmaker), Team 2, 11, Vector(14.950, 2.480, 15.423), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[6], Custom String("FRONT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[7], Custom String("RIGHT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[8], Custom String("UP INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[9], Custom String("BACK INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[10], Custom String("LEFT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[11], Custom String("DOWN INVERSE"));
		"for each bot, make gravity 0"
		For Global Variable(gravity_counter, 0, Count Of(All Players(Team 2)), 1);
			Set Gravity(All Players(Team 2)[Global.gravity_counter], 0);
		End;
	}
}

rule("START try 3x3x3 full - create the colors, and cube like shape")
{
	event
	{
		Ongoing - Global;
	}

	conditions
	{
		Is Game In Progress == True;
	}

	actions
	{
		"initialize starting positions"
		Global.Front_1 = Vector(0, 10, 4);
		Global.Front_2 = Vector(0, 10, 0);
		Global.Front_3 = Vector(0, 6, 4);
		"Done"
		Global.Front_4 = Vector(0, 6, 0);
		"1st sequence - add to the array for the order, with correct corrdinates"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_1);
		"initialize starting positions"
		disabled Global.temp_position = Global.Front_1;
		"temp seq"
		disabled Global.temp_position += Vector(0, -0.500, 0);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_2);
		"temp 2"
		disabled Global.temp_position = Global.Front_1;
		disabled Global.temp_position += Vector(0, 0, -0.500);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_3);
		"temp 3"
		disabled Global.temp_position = Global.Front_1;
		disabled Global.temp_position += Vector(0, -0.500, -0.500);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_4);
		"temp 4"
		disabled Global.Front_4 = Vector(0, 6, 0);
		disabled Modify Global Variable(Cube_coords_orb, Append To Array, Global.Front_4);
		"1. create the orbs now in starting position ( white )"
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[1], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[2], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[3], 0.300, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(White), Global.Cube_coords_orb[4], 0.300, Visible To Position and Radius);

        "White 1"
        Modify Global Variable(Front_1, Append To Array, Vector(0, 0, 0));
        Modify Global Variable(Front_1, Append To Array, Vector(0, 0, 0));
        Modify Global Variable(Front_1, Append To Array, Vector(0, 0, 0));
        Modify Global Variable(Front_1, Append To Array, Vector(0, 0, 0));
        Create Beam Effect(All Players(All Teams), Good Beam, Global.Front_1[0], Global.Front_1[1], Color(White),
		Visible To Position and Radius);
        Create Beam Effect(All Players(All Teams), Good Beam, Global.Front_1[0], Global.Front_1[6], Color(White),
		Visible To Position and Radius);
        Create Beam Effect(All Players(All Teams), Good Beam, Global.Front_1[7], Global.Front_1[1], Color(White),
		Visible To Position and Radius);
        Create Beam Effect(All Players(All Teams), Good Beam, Global.Front_1[7], Global.Front_1[6], Color(White),
		Visible To Position and Radius);


		"start 2nd sequence"
		Global.Left_3 = Vector(-6, 10, 6);
		Global.Left_1 = Vector(-2, 10, 6);
		Global.Left_4 = Vector(-6, 6, 6);
		"done"
		Global.Left_2 = Vector(-2, 6, 6);
		"2nd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Left_4);
		"2. create left orbs ( orange )"
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[5], 5, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[6], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[7], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Orange), Global.Cube_coords_orb[8], 1, Visible To Position and Radius);
		Global.Down_2 = Vector(-2, 4, 0);
		"start 3rd sequence"
		Global.Down_1 = Vector(-2, 4, 4);
		Global.Down_4 = Vector(-6, 4, 0);
		"done"
		Global.Down_3 = Vector(-6, 4, 4);
		"3rd sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Down_4);
		"3. create down orbs ( green )"
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[9], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[10], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[11], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Green), Global.Cube_coords_orb[12], 1, Visible To Position and Radius);
		"start 4th sequence"
		Global.Right_2 = Vector(-2, 10, -2);
		Global.Right_4 = Vector(-6, 10, -2);
		Global.Right_1 = Vector(-2, 6, -2);
		"Done"
		Global.Right_3 = Vector(-6, 6, -2);
		"4th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Right_4);
		"4. create right orbs ( red )"
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[13], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[14], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[15], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Red), Global.Cube_coords_orb[16], 1, Visible To Position and Radius);
		"start 5th sequence"
		Global.Up_1 = Vector(-2, 12, 0);
		Global.Up_2 = Vector(-2, 12, 4);
		Global.Up_3 = Vector(-6, 12, 0);
		"Done"
		Global.Up_4 = Vector(-6, 12, 4);
		"5th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Up_4);
		"5. create Up orbs ( blue )"
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[17], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[18], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[19], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Blue), Global.Cube_coords_orb[20], 1, Visible To Position and Radius);
		"start 6th sequence"
		Global.Back_4 = Vector(-8, 10, 0);
		Global.Back_3 = Vector(-8, 10, 4);
		Global.Back_2 = Vector(-8, 6, 0);
		"done"
		Global.Back_1 = Vector(-8, 6, 4);
		"6th sequence"
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_1);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_2);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_3);
		Modify Global Variable(Cube_coords_orb, Append To Array, Global.Back_4);
		"6. create back orbs ( black )"
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[21], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[22], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[23], 1, Visible To Position and Radius);
		Create Effect(All Players(All Teams), Orb, Color(Black), Global.Cube_coords_orb[24], 1, Visible To Position and Radius);
		"DUMMIES - FRONT BOT"
		Create Dummy Bot(Hero(Doomfist), Team 2, 0, Vector(3.521, 0, -0.607), Vector(0, 0, 0));
		"RIGHT BOT"
		Create Dummy Bot(Hero(Roadhog), Team 2, 1, Vector(-1.900, 8.139, -5.417), Vector(0, 0, 0));
		"UP BOT"
		Create Dummy Bot(Hero(Junker Queen), Team 2, 2, Vector(3, 11.500, 1), Vector(0, 0, 0));
		"BACK BOT"
		Create Dummy Bot(Hero(Bastion), Team 2, 3, Vector(-8, 1, 0), Vector(0, 0, 0));
		"LEFT BOT"
		Create Dummy Bot(Hero(Lifeweaver), Team 2, 4, Vector(-2.500, 0.200, 6), Vector(0, 0, 0));
		"DOWN BOT"
		Create Dummy Bot(Hero(D.Va), Team 2, 5, Vector(-3, 0.200, 1), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[0], Custom String("FRONT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[1], Custom String("RIGHT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[2], Custom String("UP"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[3], Custom String("BACK"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[4], Custom String("LEFT"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[5], Custom String("DOWN"));
		"DUMMIES - FRONT INVERSE"
		Create Dummy Bot(Hero(Ana), Team 2, 6, Vector(15.135, 2.500, -3.790), Vector(0, 0, 0));
		"RIGHT INVERSE BOT"
		Create Dummy Bot(Hero(Reinhardt), Team 2, 7, Vector(15.202, 2.500, 0.005), Vector(0, 0, 0));
		"UP INVERSE"
		Create Dummy Bot(Hero(Junkrat), Team 2, 8, Vector(14.877, 2.477, 3.986), Vector(0, 0, 0));
		"BACK INVERSE"
		Create Dummy Bot(Hero(Baptiste), Team 2, 9, Vector(14.958, 2.483, 8.100), Vector(0, 0, 0));
		"LEFT INVERSE"
		Create Dummy Bot(Hero(LÃºcio), Team 2, 10, Vector(14.950, 2.477, 11.418), Vector(0, 0, 0));
		"DOWN INVERSE"
		Create Dummy Bot(Hero(Widowmaker), Team 2, 11, Vector(14.950, 2.480, 15.423), Vector(0, 0, 0));
		"rename"
		Start Forcing Dummy Bot Name(All Players(Team 2)[6], Custom String("FRONT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[7], Custom String("RIGHT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[8], Custom String("UP INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[9], Custom String("BACK INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[10], Custom String("LEFT INVERSE"));
		Start Forcing Dummy Bot Name(All Players(Team 2)[11], Custom String("DOWN INVERSE"));
		"for each bot, make gravity 0"
		For Global Variable(gravity_counter, 0, Count Of(All Players(Team 2)), 1);
			Set Gravity(All Players(Team 2)[Global.gravity_counter], 0);
		End;
	}
}











rule("player starts")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		"run once when spawned in"
		Has Spawned(Event Player) == True;
	}

	actions
	{
		Set Gravity(Event Player, 0);
		disabled Set Move Speed(Event Player, 70);
		"CREATING CUBE OUTLINE? - left side"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 5), Vector(-0.500, 5, 5), Color(White),
			Visible To Position and Radius);
		"mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 2), Vector(-0.500, 5, 2), Color(White),
			Visible To Position and Radius);
		"right"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, -1), Vector(-0.500, 5, -1), Color(White),
			Visible To Position and Radius);
		"top"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 5), Vector(-0.500, 11, -1), Color(White),
			Visible To Position and Radius);
		"mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 8, 5), Vector(-0.500, 8, -1), Color(White),
			Visible To Position and Radius);
		"bottom"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 5, 5), Vector(-0.500, 5, -1), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-0.550, 11, 5);
		Global.bg_beam_end = Vector(-0.550, 5, 5);
		disabled Global.bg_beam_count = 25;
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 24, 1);
		disabled Global.bg_beam_start += Vector(0, 0, -0.250);
		disabled Global.bg_beam_end += Vector(0, 0, -0.250);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
		"BACK CUBE OUTLINE "
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, 5), Vector(-7.500, 5, 5), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, 2), Vector(-7.500, 5, 2), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, -1), Vector(-7.500, 5, -1), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, 5), Vector(-7.500, 11, -1), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 8, 5), Vector(-7.500, 8, -1), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 5, 5), Vector(-7.500, 5, -1), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-7.550, 11, 5);
		Global.bg_beam_end = Vector(-7.550, 5, 5);
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 24, 1);
		disabled Global.bg_beam_start += Vector(0, 0, -0.250);
		disabled Global.bg_beam_end += Vector(0, 0, -0.250);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
		"LEFT OUTLINE - left, mid, right"
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, 5), Vector(-0.500, 5, 5), Color(White),
			Visible To Position and Radius);
		"left mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-4, 11, 5), Vector(-4, 5, 5), Color(White),
			Visible To Position and Radius);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 5), Vector(-7.500, 5, 5), Color(White),
			Visible To Position and Radius);
		"top, mid, bot"
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 5), Vector(-0.500, 11, -1), Color(White),
			Visible To Position and Radius);
		"left mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 8, 5), Vector(-7.500, 8, 5), Color(White),
			Visible To Position and Radius);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 5, 5), Vector(-0.500, 5, -1), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-7.450, 11, 4.900);
		Global.bg_beam_end = Vector(-7.450, 5, 4.900);
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 26, 1);
		disabled Global.bg_beam_start += Vector(0.250, 0, 0);
		disabled Global.bg_beam_end += Vector(0.250, 0, 0);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
		"right mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-4, 11, -1), Vector(-4, 5, -1), Color(White),
			Visible To Position and Radius);
		"right mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 8, -1), Vector(-7.500, 8, -1), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-7.450, 11, -0.900);
		Global.bg_beam_end = Vector(-7.450, 5, -0.900);
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 26, 1);
		disabled Global.bg_beam_start += Vector(0.250, 0, 0);
		disabled Global.bg_beam_end += Vector(0.250, 0, 0);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
		"top"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, 5), Vector(-0.500, 11, 5), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 11, -1), Vector(-0.500, 11, -1), Color(White),
			Visible To Position and Radius);
		"bot"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 5, 5), Vector(-0.500, 5, 5), Color(White),
			Visible To Position and Radius);
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-7.500, 5, -1), Vector(-0.500, 5, -1), Color(White),
			Visible To Position and Radius);
		"top mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-4, 11, 5), Vector(-4, 11, -1), Color(White),
			Visible To Position and Radius);
		"top mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 11, 2), Vector(-7.500, 11, 2), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-7.450, 11, 5);
		Global.bg_beam_end = Vector(-0.450, 11, 5);
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 24, 1);
		disabled Global.bg_beam_start += Vector(0, 0, -0.250);
		disabled Global.bg_beam_end += Vector(0, 0, -0.250);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
		"down mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-4, 5, 5), Vector(-4, 5, -1), Color(White),
			Visible To Position and Radius);
		"down mid"
		Create Beam Effect(All Players(All Teams), Grapple Beam, Vector(-0.500, 5, 2), Vector(-7.500, 5, 2), Color(White),
			Visible To Position and Radius);
		"set beam structure up"
		Global.bg_beam_start = Vector(-7.450, 5, 5);
		Global.bg_beam_end = Vector(-0.450, 5, 5);
		"create the background cube"
		disabled For Global Variable(bg_beam_count, 0, 24, 1);
		disabled Global.bg_beam_start += Vector(0, 0, -0.250);
		disabled Global.bg_beam_end += Vector(0, 0, -0.250);
		disabled Create Beam Effect(All Players(All Teams), Grapple Beam, Global.bg_beam_start, Global.bg_beam_end, Color(Sky Blue), None);
		disabled End;
	}
}

disabled rule("Bot Moves Back to Start Position")
{
	event
	{
		Player Took Damage;
		All;
		All;
	}

	conditions
	{
		Is Dummy Bot(Event Player) == True;
	}

	actions
	{
		Start Throttle In Direction(Event Player, Direction Towards(Position Of(Event Player), Vector(100, 100, 100)), 1, To World,
			Replace existing throttle, Direction and Magnitude);
		Wait Until(Distance Between(Position Of(Event Player), Vector(100, 100, 100)) <= 0.500, 99999);
		Stop Throttle In Direction(Event Player);
	}
}

rule("Heros for subroutines")
{
	event
	{
		Player Died;
		All;
		All;
	}

	actions
	{
		"FRONT TURN - DOOMFIST"
		If(Event Player == Players On Hero(Hero(Doomfist), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("Turn Front"), Null, Null, Left, 0, Color(White), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Front);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(3.521, 0, -0.607));
		"RIGHT TURN - ROADHOG"
		Else If(Event Player == Players On Hero(Hero(Roadhog), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN RIGHT"), Null, Null, Left, 0, Color(Red), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Right);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(-3.798, 0, -3.070));
		"UP TURN - JUNKERQUEEN"
		Else If(Event Player == Players On Hero(Hero(Junker Queen), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN UP"), Null, Null, Left, 0, Color(Blue), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Up);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(3, 11.500, 1));
		"BACK TURN - BASTION"
		Else If(Event Player == Players On Hero(Hero(Bastion), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN BACK"), Null, Null, Left, 0, Color(Black), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Back);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(-8, 1, 0));
		"LEFT TURN - LIFEWEAVER"
		Else If(Event Player == Players On Hero(Hero(Lifeweaver), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN LEFT"), Null, Null, Left, 0, Color(Orange), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Left);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(-2.500, 0.200, 6));
		"DOWN TURN - DVA"
		Else If(Event Player == Players On Hero(Hero(D.Va), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN DOWN"), Null, Null, Left, 0, Color(Green), Color(White), Color(White),
				Visible To and String, Default Visibility);
			Call Subroutine(Down);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(-3, 0.200, 1));
		"RIGHT INVERSE - REINHARDT"
		Else If(Event Player == Players On Hero(Hero(Reinhardt), Team 2));
			Create HUD Text(All Players(All Teams), Custom String("TURN RIGHT INVERSE"), Null, Null, Left, 0, Color(Red), Color(White), Color(
				White), Visible To and String, Default Visibility);
			Call Subroutine(Right);
			Call Subroutine(Right);
			Call Subroutine(Right);
			Wait(1.200, Ignore Condition);
			Teleport(Event Player, Vector(15, 2.500, 0));
	}
}

rule("give ult charge if its at 0")
{
	event
	{
		Ongoing - Each Player;
		All;
		All;
	}

	conditions
	{
		Ultimate Charge Percent(Event Player) <= 99;
	}

	actions
	{
		disabled If(Ultimate Charge Percent(Event Player) <= 99);
		Set Ultimate Charge(Event Player, 100);
	}
}

rule("Front turn - subroutine")
{
	event
	{
		Subroutine;
		Front;
	}

	actions
	{
		"front face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_4);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 0, -4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -4, 0);
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, 0, 4);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 4, 0);
		"setup right face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_1);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_2);
		"up face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, -6, -2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -2, -6);
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 2, -6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 6, -2);
		"down face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 6, 2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 2, 6);
		"right turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, -2, 6);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, -6, 2);
		Create HUD Text(All Players(All Teams), Custom String("FRONT DONE"), Null, Null, Left, 0, Color(Gray), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Right turn - subroutine")
{
	event
	{
		Subroutine;
		Right;
	}

	actions
	{
		"right face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 4, 0);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-4, 0, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, -4, 0);
		Global.Cube_coords_orb[Global.Position_3] += Vector(4, 0, 0);
		"setup top face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_1);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_3);
		"front face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_2);
		Global.Cube_coords_orb[Global.Position_1] += Vector(-6, 2, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-2, 6, 0);
		"down face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_2);
		Global.Cube_coords_orb[Global.Position_1] += Vector(2, 6, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(6, 2, 0);
		"back face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_2);
		Global.Cube_coords_orb[Global.Position_1] += Vector(6, -2, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(2, -6, 0);
		"front turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(-6, -2, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(-2, -6, 0);
		Create HUD Text(All Players(All Teams), Custom String("RIGHT DONE"), Null, Null, Left, 0, Color(Gray), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Up turn - subroutine")
{
	event
	{
		Subroutine;
		Up;
	}

	actions
	{
		"right face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 0, 4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-4, 0, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 0, -4);
		Global.Cube_coords_orb[Global.Position_3] += Vector(4, 0, 0);
		"setup FRONT face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_1);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_2);
		"RIGHT face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_2);
		Global.Cube_coords_orb[Global.Position_1] += Vector(2, 0, 6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(6, 0, 2);
		"BACK face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(6, 0, -2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_3);
		Global.Cube_coords_orb[Global.Position_2] += Vector(2, 0, -6);
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(-2, 0, -6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_1);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-6, 0, -2);
		"front turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(-6, 0, 2);
		Global.Cube_coords_orb[Global.Position_4] += Vector(-2, 0, 6);
		Create HUD Text(All Players(All Teams), Custom String("UP DONE"), Null, Null, Left, 0, Color(Gray), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Back turn - subroutine")
{
	event
	{
		Subroutine;
		Back;
	}

	actions
	{
		"front face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 0, -4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 4, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 0, 4);
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, -4, 0);
		"setup right face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_4);
		"down face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 2, -6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, 6, -2);
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, -6, -2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -2, -6);
		"up face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_3);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, -2, 6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(0, -6, 2);
		"back turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(0, 6, 2);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 2, 6);
		Create HUD Text(All Players(All Teams), Custom String("BACK DONE"), Null, Null, Left, 0, Color(Black), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Left turn - subroutine")
{
	event
	{
		Subroutine;
		Left;
	}

	actions
	{
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, -4, 0);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-4, 0, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 4, 0);
		Global.Cube_coords_orb[Global.Position_3] += Vector(4, 0, 0);
		"setup top face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_2);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Up_4);
		"back face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(2, 6, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_3);
		Global.Cube_coords_orb[Global.Position_2] += Vector(6, 2, 0);
		"down face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(-6, 2, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_3);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-2, 6, 0);
		"front face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(-2, -6, 0);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_3);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-6, -2, 0);
		"front turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(2, -6, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(6, -2, 0);
		Create HUD Text(All Players(All Teams), Custom String("LEFT DONE"), Null, Null, Left, 0, Color(Orange), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}

rule("Down turn - subroutine")
{
	event
	{
		Subroutine;
		Down;
	}

	actions
	{
		"right face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_1);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_2);
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Down_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(0, 0, -4);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-4, 0, 0);
		Global.Cube_coords_orb[Global.Position_4] += Vector(0, 0, 4);
		Global.Cube_coords_orb[Global.Position_3] += Vector(4, 0, 0);
		"setup FRONT face"
		Global.Position_3 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_3);
		Global.Position_4 = Index Of Array Value(Global.Cube_coords_orb, Global.Front_4);
		"left face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_4);
		Global.Cube_coords_orb[Global.Position_1] += Vector(6, 0, -2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Left_2);
		Global.Cube_coords_orb[Global.Position_2] += Vector(2, 0, -6);
		"BACK face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_2);
		Global.Cube_coords_orb[Global.Position_1] += Vector(2, 0, 6);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Back_1);
		Global.Cube_coords_orb[Global.Position_2] += Vector(6, 0, 2);
		"right face"
		Global.Position_1 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_1);
		Global.Cube_coords_orb[Global.Position_1] += Vector(-6, 0, 2);
		Global.Position_2 = Index Of Array Value(Global.Cube_coords_orb, Global.Right_3);
		Global.Cube_coords_orb[Global.Position_2] += Vector(-2, 0, 6);
		"front turn"
		Global.Cube_coords_orb[Global.Position_3] += Vector(-2, 0, -6);
		Global.Cube_coords_orb[Global.Position_4] += Vector(-6, 0, -2);
		Create HUD Text(All Players(All Teams), Custom String("DOWN DONE"), Null, Null, Left, 0, Color(Green), Color(White), Color(White),
			Visible To and String, Default Visibility);
	}
}